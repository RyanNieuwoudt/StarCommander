// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StarCommander.Infrastructure.Persistence.Projection;

#nullable disable

namespace StarCommander.Migrations.Projection
{
    [DbContext(typeof(ProjectionDataContext))]
    [Migration("20220326182309_AddProjections")]
    partial class AddProjections
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StarCommander.Infrastructure.Persistence.Projection.ShipLocations.ShipLocation", b =>
                {
                    b.Property<long>("ShipLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ShipLocationId"));

                    b.Property<Instant>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Heading")
                        .HasColumnType("double precision");

                    b.Property<Guid>("ShipId")
                        .HasColumnType("uuid");

                    b.Property<long>("Speed")
                        .HasColumnType("bigint");

                    b.Property<long>("X")
                        .HasColumnType("bigint");

                    b.Property<long>("Y")
                        .HasColumnType("bigint");

                    b.HasKey("ShipLocationId");

                    b.HasIndex("X");

                    b.HasIndex("Y");

                    b.ToTable("ShipLocations");
                });
#pragma warning restore 612, 618
        }
    }
}
